function [inj] = create_ineq_inj(g_u_inj,g_l_inj,p_line_fr_u,q_line_fr_u,p_line_to_u,q_line_to_u,pg_opt,pg_opt_u,qg_opt,qg_opt_u,pl_opt,ql_opt,gamma_opt, slack_pq, slack_qg, slack_line, margin_opt)
    g_g1 = -g_u_pinj + Cg*pg_opt - Cl*pl_opt; 
    g_g2 =  g_l_pinj - Cg*pg_opt + Cl*pl_opt; 
    g_pgmax = -pg_max + pg_opt + slack_pg;   
    g_pgmin =  pg_min - pg_opt + slack_pg; 
    g_qgmax = -qg_max + qg_opt + slack_qg;
    g_qgmin =  qg_min - qg_opt + slack_qg;

    g_line1 = p_line_fr_u.^2+q_line_fr_u.^2+slack_line-s_line_max.^2;% <= s_line_max.^2
    g_line2 = p_line_to_u.^2+q_line_to_u.^2+slack_line-s_line_max.^2;% <= s_line_max.^2

    g_margin1 = slack_pg - margin_opt;
    g_margin2 = slack_qg - margin_opt;
    g_margin3 = slack_line -margin_opt;
    g_margin4 = gamma_opt - margin_opt;%>=0
    g_pgopt = pg_opt+alpha0.*delta_u-pg_opt_u; %<=0 
    g_pgopt2 = pg_opt+alpha0.*delta0+Dalpha_opt.*delta0+alpha0.*Ddelta_u+1/4*(Ddelta_u+Dalpha_opt).^2-pg_opt_u;
end

